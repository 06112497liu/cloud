spring:
  datasource:
    druid:
      url: jdbc:mysql://localhost:3306/lwb?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=GMT%2B8&autoReconnect=true
      username: root
      password: 123456
  application:
    name: user-service
  redis:
    timeout: 10000ms  # 数据库连接超时时间，2.0 中该参数的类型为Duration，这里在配置的时候需要指明单位
    jedis:  # 连接池配置，2.0中直接使用jedis或者lettuce配置连接池
      pool:
        max-total: 200 # 连接池最大连接数（使用负值表示没有限制）
        max-active: 200  # 连接池最大连接数（使用负值表示没有限制）
        max-wait: -1    # 连接池最大阻塞等待时间（使用负值表示没有限制）ms
        max-idle: 10     # 连接池中的最大空闲连接
        min-idle: 6      # 连接池中的最小空闲连接
eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8001/eureka/
    # 客户端会维持一个只读的服务列表（缓存），该值表示多久去注册中心更新一次服务列表，默认是30s
#    registry-fetch-interval-seconds: 30
  instance:
    # 客户端向注册中心发送心跳包的间隔时间，默认是30s
#    lease-renewal-interval-in-seconds: 5
    # 客户端失效时间，默认是90s，也就是90s内，注册中心没有收到心跳包，将会认为服务失效，会被注册中心剔除，如果开启自我保护模式，自我保护下的示例永远不会被剔除
#    lease-expiration-duration-in-seconds: 10
    # 在大多数情况下，我们更倾向发布服务的ip而不是${eureka.instance.hostname}，所以我们设置为true
    prefer-ip-address: true
    # 控制eureka服务界面服务显示，使用ip而不是：${spring.cloud.client.hostname}:${spring.application.name}:${spring.application.instance_id:${server.port}}
    instance-id: ${spring.cloud.client.ip-address}:${spring.application.name}:${server.port}
